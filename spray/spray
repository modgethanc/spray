#!/usr/bin/perl -w
use strict;
#use Switch;
use feature qw(switch);
use Time::localtime;
use File::stat;
use Date::Format;
use List::MoreUtils qw(uniq);
use POSIX ();

# global defaults; overriden if config options are set

my $INDEXVIEW = 2;
my $RSSVIEW = 10;
my $NAVVIEW = 5;
my $TAGVIEW = 5;
my $LOC = "out";
my $HARDLINK = '';
my $HEADERFILE = 'header.txt';
my $NAVFILE = 'nav.txt';
my $FOOTERFILE = 'footer.txt';
my $RSSFILE = 'rss.head.txt';
my $LINKOUT = '';
my $CONTENT = "../content";
my $BACKLOGDESC = "Backlogs are used for texts that appear out of the chronology of the main posts.";

&config;

my @files = glob("$CONTENT/*.txt");
my %fileDates;

foreach (@files) {
  $fileDates{$_} = stat($_)->mtime;
}

my @sortedFiles = sort {$fileDates{$b} <=> $fileDates{$a}} keys %fileDates;

open IN, $HEADERFILE;
my @header = <IN>;
close IN;

open IN, $FOOTERFILE;
my @footer = <IN>;
close IN;

open IN, $NAVFILE;
my @nav= <IN>;
close IN;

open IN, $RSSFILE;
my @RSSHead = <IN>;
close IN;

# make the magic happen

&makeNav;
&makeIndex;
&makeBacklog;
&makeTexts;
&makeTagpage;
&makeDrafts;
&makeFiles;
&makeRSS;

# subroutines below

sub config { #parses config file; make some sane defaults
  open IN, 'config';
  my @configparse = <IN>;
  close IN;

        foreach (@configparse) {
                my @var = split("=", $_);
                given ($var[0]) {
                        when (/config_headerfile/) { chomp($HEADERFILE = $var[1]); }
                        when (/config_navfile/)         { chomp($NAVFILE = $var[1]); }
                        when (/config_footerfile/)      { chomp($FOOTERFILE = $var[1]); }
                        when (/config_rssfile/)         { chomp($RSSFILE = $var[1]); }
                        when (/config_indexview/)       { $INDEXVIEW = $var[1]; }
                        when (/config_rssview/)         { $RSSVIEW = $var[1]; }
                        when (/config_navview/) { $NAVVIEW = $var[1]; }
                        when (/config_tagview/) { $TAGVIEW = $var[1]; }
                        when (/config_loc/)     { chomp($LOC = $var[1]); }
                        when (/config_hardlink/)        { chomp($HARDLINK = $var[1]); }
                        when (/config_linkout/)         { chomp($LINKOUT = $var[1]); }
                        when (/config_content/)         { chomp($CONTENT= $var[1]); }
                }
        }
}

sub fileMeta { #input a file, get [0]: fileurl; [1]: filecode; [2]: filetype; [3]: file title; [4]: file link code; [5]: last line (for tags)
  my @fileInfo;

  my @namesplit = split('/', $_[0]);
  my @file = split('\.', $namesplit[-1]);

  $fileInfo[1] = $file[-2];
  $fileInfo[0] = "$fileInfo[1].html";
  $fileInfo[2] = $file[0];

  open IN, $_;
  my @content= <IN>;
  close IN;

  chomp($fileInfo[3] = $content[0]);

  $fileInfo[4] = "<a href=\"$LINKOUT$fileInfo[0]\">$fileInfo[3]</a>";
  chomp($fileInfo[5] = $content[-1]);

  return @fileInfo;
}

sub makeNav { # generating the nav sidebar

  my $recentCount = 0;

  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    if (($fileInfo[2] =~ /texts/) && ($recentCount < $NAVVIEW )) {
      push(@nav, "<li>$fileInfo[4]</li>\n");
      $recentCount++;
    }
  }

  push(@nav, "</ul>\n<ul class=\"blank\">\n");
  push(@nav, "<li><a href=\"$LINKOUT"."texts.html\">All Posts</a></li>\n<li><a href=\"$LINKOUT"."tags.html\">Tags</a></li>\n<li><a href=\"$LINKOUT"."backlog.html\">Backlogs</a></li>\n<li><a href=\"$LINKOUT"."projects.html\">Projects</a></li></ul>\n</div> <!--nav-->\n");
}

sub makeBacklog {     # backlog list
  open OUT, ">", "$LOC/backlog.html";
  select OUT;

  print @header;
  print @nav;

  print "<div class=\"content\"><p><b>Backlogs</b></p>\n";
  print "<p><i>$BACKLOGDESC</i></p>\n";
  print "<ul class=\"texts\">\n";

  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    if ($fileInfo[2] =~ /backlog/) {
      print "<li>$fileInfo[4]</li>\n";
    }
  }

  print "</ul>\n";
  print "</div> <!---content-->\n";
  print @footer;

  close OUT;
}

sub makeDrafts {     # draft list
  open OUT, ">", "$LOC/drafts.html";
  select OUT;

  print @header;
  print @nav;

  print "<div class=\"content\"><p><b>Drafts</b></p>\n";
  print "<ul>\n";

  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    if ($fileInfo[2] =~ /drafts/) {
      print "<li>$fileInfo[4]</li>\n";
    }
  }

  print "</ul>\n";
  print "</div> <!---content-->\n";
  print @footer;

  close OUT;
}

sub makeTexts {     # master article list
  open OUT, ">", "$LOC/texts.html";
  select OUT;

  print @header;
  print @nav;

  print "<div class=\"content\"><p><b>All Posts</b></p>\n";
  print "<ul class=\"texts\">\n";

  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    if ($fileInfo[2] =~ /texts/) {
      print "<li>";
      print time2str("%d %B %Y", stat($_)->mtime, -0500);
      print " | $fileInfo[4]";
      print "</li>\n";
    }
  }

  print "</ul>\n";
  print "</div> <!---content-->\n";
  print @footer;

  close OUT;
}


sub makeTagpage { # taglist
  my %taglist = &tagLister;

  foreach my $tag (keys %taglist) {
    if ($tag !~ /backlog/) { #backlog has its own view
      &makeTagview($tag, \@{$taglist{$tag}});
    }
  }

  open OUT, ">", "$LOC/tags.html";
  select OUT;

  print @header;
  print @nav;

  print "<div class=\"content\"><p><b>Tags</b></p>\n<ul class=\"texts\">";


  foreach my $tag (sort keys %taglist) {
    if ($tag !~ /backlog/) {
    my $tagcount = $#{$taglist{$tag}} + 1;

    print "<li><a href=\"$LINKOUT"."tagged-$tag-1.html\">$tag</a> ($tagcount use";
    if ($tagcount != 1) { # fuck i hate dealing with pluralization
      print "s";
    }
    print ")";

    # displays all posts under tag; mostly for debuggin
    #foreach (@{$taglist{$tag}}) {  
    # my @fileInfo = &fileMeta($_);
    # print "$fileInfo[4] | ";
    #}
    print "</li>\n";
    }
  }

  print "</ul>\n</div><!--content-->\n";
  print @footer;

  close OUT;
}

sub tagPaginator { # makes paginated tag pages; [0] tag, [1] files, [2] pagecount, [3] tagged, [4]tagpages
  my @taggedfiles = @{$_[1]};
  my $tagged = $_[3];
  my $pagecount = $_[2];
  my $tagpages = $_[4];

  if ($pagecount <= $tagpages) {
    open OUT, ">", "$LOC/tagged-$_[0]-$pagecount.html";
    select OUT;

    print @header;
    print @nav;

    print "<div class=\"content\">\n<p><i>$tagged tagged with \#$_[0]</i></p>\n";
    
    my @pagenav = ("<p>( page: ");

    for (my $x=1;$x<=$tagpages;$x++) {
      my $navnum = $x;  

      if ($x == $pagecount) { push(@pagenav, " <i>$navnum</i> "); }
      else { push(@pagenav, " <a href=\"tagged-$_[0]-$navnum.html\">$navnum</a> "); }
    }

    push(@pagenav, ")</p>\n");
  
    print @pagenav; 

    my $i = $TAGVIEW;
    while (($i > 0) && (@taggedfiles)) {
      my $file = shift(@taggedfiles);
      my @fileInfo = &fileMeta($file);
      print "<div class=\"list\">\n";
      print &makeContent($file, $fileInfo[1], $fileInfo[0], "list");
      print "</div><!--list--><br />\n";
      $i--;
    }
    
    print @pagenav;
    print "</div> <!--content-->\n";
    print @footer;

    close OUT;

    $pagecount++;

    &tagPaginator($_[0], \@taggedfiles, $pagecount, $_[3], $tagpages);
  }
}

sub makeTagview { # makes individual tag pages; pass in [0]: $tag, [1] @files
  my @taggedfiles = @{$_[1]};
  my $tagged = $#taggedfiles + 1;
  my $postcount = 0;
  my $pagecount = 1;

  my $tagpages = POSIX::ceil($tagged/$TAGVIEW);

  &tagPaginator($_[0], \@taggedfiles, $pagecount, $tagged, $tagpages);
}

sub tagLister { # generates tag list; pass in sorted files, returns taghash
  my %tagsublist;

  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    if (($fileInfo[2] !~ /meta/) && ($fileInfo[2] !~ /drafts/)){
      if ($fileInfo[5] =~ /^\#/) {
        my @alltags = split(' *#', $fileInfo[5]);
        my @uniqueTags = uniq(@alltags);

        foreach my $tag (@uniqueTags[1..$#uniqueTags]) {
          chomp($tag);
          push(@{$tagsublist{$tag}}, $_);
        }
      } else {
        push(@{$tagsublist{"untagged"}}, $_);
      }
    }
  }

  return %tagsublist;
}

sub makeIndex { #make index file
  open OUT, ">", "$LOC/index.html";
  select OUT;

  print @header;
  print @nav;

  print "<div class=\"content\">";
  my $indexCount = 0;
  foreach (@sortedFiles) {
    my @namesplit = split('/', $_);
    my @file = split('\.', $namesplit[-1]);
    my $filename = "$file[-2].html";

    if (($indexCount < $INDEXVIEW ) && ($file[0] =~ /texts/)){
      print "<div class=\"list\">\n";
      print &makeContent($_, $file[-2], $filename, "list");
      print "</div> <!--list--><br />\n";
      $indexCount++;
    }
  }

  print "</div> <!--content-->\n";
  print @footer;

  close OUT;
}

sub makeContent { # {file contents, filename, fileurl. filetype}
    open IN, $_[0];
    my @infile = <IN>;
    close IN;

    my @content;
    my $linecount = 0;

    foreach (@infile) {
      chomp($_);

      if (($linecount == 0) && ($_[3] !~ /meta/)) {
        if ($_[3] =~ /list/ ) {
          push(@content, "<h3><a href=\"$LINKOUT$_[2]\">$_</a></h3>\n<hr />\n<p>");
        } else {
          push(@content, "<h3>$_</h3>\n<hr />\n<p>");
        }

        $linecount++;
      } else {
        if ($linecount == 0 ) {
          push(@content, "<p>");
        }

        if (($linecount == $#infile) && ($_ =~ /^\#/)) {
          push(@content, "</p><div class=\"tags\">");
          my @tags = split(' *#', $_);
          foreach my $tag (@tags[1..$#tags]) {
            chomp($tag);
            if ($tag =~ /backlog/ ) {
              push(@content, "\#<a href=\"$LINKOUT"."backlog.html\">");
            } else {
              push(@content, "\#<a href=\"$LINKOUT"."tagged-$tag-1.html\">");
            }
            push(@content, "$tag</a> ");
          }
          push(@content, "</div><p>");
        } else {
          push(@content, "$_ ");
        }
        $linecount++;
      }

      if (!$_) {
        push(@content, "</p>\n<p>");
      }
    }

    push(@content, "</p>\n");

    if ($_[3] !~ /meta/) {
      push(@content, "<p class=\"textinfo\"><i>");
      if ($_[3] =~ /list/) {
        push(@content, "<a href=\"$LINKOUT$_[2]\">Permalink</a><br />\n");
      }
      if ($_[3] =~ /backlog/) {
        push(@content, "Imported on ");
      }
      push(@content, time2str("%d %B %Y %R", stat($_[0])->mtime, -0500));
      # push(@content, "<br />\n <a href=\"mailto:hvincent+spray.$_[1]\@modgethanc.com\">Respond to this?</a></i></p>\n");
      push(@content, "</i></p>\n");
    }

    return @content;
}

sub makeFiles { # file creation
  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    my $filename = "$fileInfo[1].html";

    open OUT, ">", "$LOC/$filename";
    select OUT;

    print @header;
    print @nav;

    print "<div class=\"content\">\n";
    print &makeContent($_, $fileInfo[1], $filename, $fileInfo[2]);
    print "</div> <!--content-->\n";

    print @footer;

    close OUT;
  }
}

sub makeRSS { #RSS feed
  open OUT, ">", "$LOC/spray.xml";
  select OUT;

  print @RSSHead;

  my $RSSCount = 0;
  foreach (@sortedFiles) {
    my @fileInfo = &fileMeta($_);

    if (($RSSCount < $RSSVIEW) && ($fileInfo[2] =~ /texts/)){
      # do the thing
      open IN, $_;
      my @infile = <IN>;
      close IN;

      my $preview;
      chomp($preview = $infile[2]);
      my @previewslice = split(//,$preview);

      print "<item>\n";
      print "<title>$fileInfo[3]</title>\n";
      print "<link>$HARDLINK/$fileInfo[1].html</link>\n";
      #print "<description>$preview</description>\n";
      print "<description>";
      if ($#previewslice < 100) {
        print $preview;
      } else {A
        for (my $i = 0; $i < 100; $i++) {
          print $previewslice[$i];
        }
        print "[...]";
       }
      print "</description>";
      print "<pubDate>";
      print time2str("%a, %d %b %Y %X %z", stat($_)->mtime, -0500);
      print "</pubDate>\n";
      print "</item>\n";

      $RSSCount++;
    }
  }

  print "</channel>\n";
  print "</rss>";

  close OUT;
}
